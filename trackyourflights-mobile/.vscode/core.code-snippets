{
	"Core Presenter": {
		"prefix": ["pr", "pres", "presenter"],
		"body": [
			"final ${1/([a-zA-Z])(.*)/${1:/downcase}$2/}Container =",
				"PresenterContainer<${1/([a-zA-Z])(.*)/${1:/upcase}$2/}Presenter, ${1/([a-zA-Z])(.*)/${1:/upcase}$2/}State>(",
					"() => ${1/([a-zA-Z])(.*)/${1:/upcase}$2/}Presenter());",
			"",
			"class ${1/([a-zA-Z])(.*)/${1:/upcase}$2/}Presenter extends CompletePresenter<${1/([a-zA-Z])(.*)/${1:/upcase}$2/}State> {",
				"${1/([a-zA-Z])(.*)/${1:/upcase}$2/}Presenter() : super(${1/([a-zA-Z])(.*)/${1:/upcase}$2/}State());",
			"}"
		],
	},
	"Core State": {
		"prefix": ["st", "state"],
		"body": [
			"class ${1/([a-zA-Z])(.*)/${1:/upcase}$2/}State with EquatableMixin {",
				"",
				"@override",
				"List<Object?> get props => [ throw UnimplementedError() ];",
			"}",
		],
	},
	"Consumer Widget": {
		"prefix": ["cw", "conwid"],
		"body": [
			"class ${1/([a-zA-Z])(.*)/${1:/upcase}$2/} extends ConsumerWidget {",
			"",
			"  const ${1/([a-zA-Z])(.*)/${1:/upcase}$2/}({Key? key}) : super(key: key);",
			"",
			"  ProviderBase<${1/([a-zA-Z])(.*)/${1:/upcase}$2/}Presenter> get presenter =>",
			"    ${1/([a-zA-Z])(.*)/${1:/downcase}$2/}Container.actions;",
			"",
			"  ProviderBase<${1/([a-zA-Z])(.*)/${1:/upcase}$2/}State> get state =>",
			"    ${1/([a-zA-Z])(.*)/${1:/downcase}$2/}Container.state;",
			"",
			"  @override",
			"  Widget build(BuildContext context, WidgetRef ref) {",
			"    return CompleteBridge(",
			"      presenter: ref.watch(presenter),",
			"      children: [],",
			"    )",
			"  }",
			"}",
		],
	},
	"Presenter Widget": {
		"prefix": ["pw", "prewid"],
		"body": [
			"class ${1/([a-zA-Z])(.*)/${1:/upcase}$2/} extends PresenterWidget {",
			"",
			"  const ${1/([a-zA-Z])(.*)/${1:/upcase}$2/}({Key? key}) : super(key: key);",
			"",
			"  @override",
			"  _${1/([a-zA-Z])(.*)/${1:/upcase}$2/}State createState() => _${1/([a-zA-Z])(.*)/${1:/upcase}$2/}State();",
		    "}",
			"",
			"class _${1/([a-zA-Z])(.*)/${1:/upcase}$2/}State extends PresenterState<${1/([a-zA-Z])(.*)/${1:/upcase}$2/}> {",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return Container();",
			"  }",
			"}",
		],
	},
}